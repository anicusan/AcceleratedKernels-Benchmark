arithmetic_kernel_omp.so:
(__TEXT,__text) section
_rbf_cpu:
000000000000372c	sub	sp, sp, #0x40
0000000000003730	stp	x29, x30, [sp, #0x30]
0000000000003734	add	x29, sp, #0x30
0000000000003738	stp	x1, x0, [x29, #-0x10]
000000000000373c	stur	w2, [x29, #-0x14]
0000000000003740	sub	x8, x29, #0x10
0000000000003744	str	x8, [sp, #0x10]
0000000000003748	sub	x8, x29, #0x8
000000000000374c	sub	x9, x29, #0x14
0000000000003750	adrp	x0, 1 ; 0x4000
0000000000003754	add	x0, x0, #0x88
0000000000003758	stp	x9, x8, [sp]
000000000000375c	adrp	x2, 0 ; 0x3000
0000000000003760	add	x2, x2, #0x778
0000000000003764	mov	w1, #0x3
0000000000003768	bl	0x3ea0 ; symbol stub for: ___kmpc_fork_call
000000000000376c	ldp	x29, x30, [sp, #0x30]
0000000000003770	add	sp, sp, #0x40
0000000000003774	ret
_.omp_outlined.:
0000000000003778	sub	sp, sp, #0xd0
000000000000377c	stp	d9, d8, [sp, #0x60]
0000000000003780	stp	x28, x27, [sp, #0x70]
0000000000003784	stp	x26, x25, [sp, #0x80]
0000000000003788	stp	x24, x23, [sp, #0x90]
000000000000378c	stp	x22, x21, [sp, #0xa0]
0000000000003790	stp	x20, x19, [sp, #0xb0]
0000000000003794	stp	x29, x30, [sp, #0xc0]
0000000000003798	add	x29, sp, #0xc0
000000000000379c	ldr	w8, [x2]
00000000000037a0	subs	w22, w8, #0x1
00000000000037a4	b.lt	0x3960
00000000000037a8	mov	x21, x4
00000000000037ac	mov	x20, x3
00000000000037b0	stp	w22, wzr, [sp, #0x58]
00000000000037b4	mov	w8, #0x1
00000000000037b8	stp	wzr, w8, [sp, #0x50]
00000000000037bc	ldr	w19, [x0]
00000000000037c0	str	w8, [sp]
00000000000037c4	adrp	x0, 1 ; 0x4000
00000000000037c8	add	x0, x0, #0x70
00000000000037cc	add	x3, sp, #0x50
00000000000037d0	add	x4, sp, #0x5c
00000000000037d4	add	x5, sp, #0x58
00000000000037d8	add	x6, sp, #0x54
00000000000037dc	mov	x1, x19
00000000000037e0	mov	w2, #0x22
00000000000037e4	mov	w7, #0x1
00000000000037e8	bl	0x3e94 ; symbol stub for: ___kmpc_for_static_init_4
00000000000037ec	ldr	w8, [sp, #0x58]
00000000000037f0	cmp	w8, w22
00000000000037f4	csel	w22, w8, w22, lt
00000000000037f8	str	w22, [sp, #0x58]
00000000000037fc	ldrsw	x8, [sp, #0x5c]
0000000000003800	cmp	w22, w8
0000000000003804	b.lt	0x3950
0000000000003808	ldr	x21, [x21]
000000000000380c	ldr	x20, [x20]
0000000000003810	sub	w9, w22, w8
0000000000003814	cmp	w9, #0x3
0000000000003818	b.lo	0x38fc
000000000000381c	add	x23, x20, x8, lsl #2
0000000000003820	sub	w10, w22, w8
0000000000003824	add	x10, x8, x10
0000000000003828	add	x11, x20, x10, lsl #2
000000000000382c	add	x11, x11, #0x4
0000000000003830	mov	w12, #0xc
0000000000003834	smaddl	x13, w8, w12, x21
0000000000003838	madd	x10, x10, x12, x21
000000000000383c	add	x10, x10, #0xc
0000000000003840	cmp	x23, x10
0000000000003844	ccmp	x13, x11, #0x2, lo
0000000000003848	b.lo	0x38fc
000000000000384c	add	x25, x9, #0x1
0000000000003850	and	x26, x25, #0x1fffffffc
0000000000003854	add	x24, x26, x8
0000000000003858	mov	w9, #0xc
000000000000385c	smaddl	x27, w8, w9, x21
0000000000003860	fmov.4s	v1, #1.00000000
0000000000003864	fmov.4s	v0, #-1.00000000
0000000000003868	stp	q0, q1, [sp, #0x10]
000000000000386c	mov	x28, x26
0000000000003870	ld3.4s	{ v0, v1, v2 }, [x27], #48
0000000000003874	fmul.4s	v3, v1, v1
0000000000003878	fmla.4s	v3, v0, v0
000000000000387c	fmla.4s	v3, v2, v2
0000000000003880	fsqrt.4s	v0, v3
0000000000003884	ldr	q1, [sp, #0x20]
0000000000003888	fsub.4s	v0, v1, v0
000000000000388c	ldr	q1, [sp, #0x10]
0000000000003890	fdiv.4s	v0, v1, v0
0000000000003894	str	q0, [sp, #0x40]
0000000000003898	mov	s0, v0[1]
000000000000389c	bl	0x3ec4 ; symbol stub for: _expf
00000000000038a0	str	d0, [sp, #0x30]
00000000000038a4	ldr	q0, [sp, #0x40]
00000000000038a8	bl	0x3ec4 ; symbol stub for: _expf
00000000000038ac	ldr	q1, [sp, #0x30]
00000000000038b0	mov.s	v0[1], v1[0]
00000000000038b4	str	q0, [sp, #0x30]
00000000000038b8	ldr	q0, [sp, #0x40]
00000000000038bc	mov	s0, v0[2]
00000000000038c0	bl	0x3ec4 ; symbol stub for: _expf
00000000000038c4	ldr	q1, [sp, #0x30]
00000000000038c8	mov.s	v1[2], v0[0]
00000000000038cc	str	q1, [sp, #0x30]
00000000000038d0	ldr	q0, [sp, #0x40]
00000000000038d4	mov	s0, v0[3]
00000000000038d8	bl	0x3ec4 ; symbol stub for: _expf
00000000000038dc	ldr	q1, [sp, #0x30]
00000000000038e0	mov.s	v1[3], v0[0]
00000000000038e4	str	q1, [x23], #0x10
00000000000038e8	subs	x28, x28, #0x4
00000000000038ec	b.ne	0x3870
00000000000038f0	cmp	x25, x26
00000000000038f4	b.ne	0x3900
00000000000038f8	b	0x3950
00000000000038fc	mov	x24, x8
0000000000003900	add	x20, x20, x24, lsl #2
0000000000003904	mov	w8, #0xc
0000000000003908	madd	x8, x24, x8, x21
000000000000390c	add	x21, x8, #0x8
0000000000003910	sub	w8, w22, w24
0000000000003914	add	w22, w8, #0x1
0000000000003918	fmov	s8, #1.00000000
000000000000391c	fmov	s9, #-1.00000000
0000000000003920	ldp	s0, s1, [x21, #-0x8]
0000000000003924	fmul	s1, s1, s1
0000000000003928	fmadd	s0, s0, s0, s1
000000000000392c	ldr	s1, [x21], #0xc
0000000000003930	fmadd	s0, s1, s1, s0
0000000000003934	fsqrt	s0, s0
0000000000003938	fsub	s0, s8, s0
000000000000393c	fdiv	s0, s9, s0
0000000000003940	bl	0x3ec4 ; symbol stub for: _expf
0000000000003944	str	s0, [x20], #0x4
0000000000003948	subs	w22, w22, #0x1
000000000000394c	b.ne	0x3920
0000000000003950	adrp	x0, 1 ; 0x4000
0000000000003954	add	x0, x0, #0x70
0000000000003958	mov	x1, x19
000000000000395c	bl	0x3e88 ; symbol stub for: ___kmpc_for_static_fini
0000000000003960	ldp	x29, x30, [sp, #0xc0]
0000000000003964	ldp	x20, x19, [sp, #0xb0]
0000000000003968	ldp	x22, x21, [sp, #0xa0]
000000000000396c	ldp	x24, x23, [sp, #0x90]
0000000000003970	ldp	x26, x25, [sp, #0x80]
0000000000003974	ldp	x28, x27, [sp, #0x70]
0000000000003978	ldp	d9, d8, [sp, #0x60]
000000000000397c	add	sp, sp, #0xd0
0000000000003980	ret
_ljg_cpu:
0000000000003984	sub	sp, sp, #0x90
0000000000003988	stp	x29, x30, [sp, #0x80]
000000000000398c	add	x29, sp, #0x80
0000000000003990	stp	x1, x0, [x29, #-0x10]
0000000000003994	stur	x2, [x29, #-0x18]
0000000000003998	stur	w3, [x29, #-0x1c]
000000000000399c	stp	s1, s0, [x29, #-0x24]
00000000000039a0	stp	s3, s2, [x29, #-0x2c]
00000000000039a4	stur	s4, [x29, #-0x30]
00000000000039a8	sub	x8, x29, #0x8
00000000000039ac	str	x8, [sp, #0x40]
00000000000039b0	sub	x8, x29, #0x2c
00000000000039b4	sub	x9, x29, #0x28
00000000000039b8	stp	x9, x8, [sp, #0x30]
00000000000039bc	sub	x8, x29, #0x24
00000000000039c0	sub	x9, x29, #0x20
00000000000039c4	stp	x9, x8, [sp, #0x20]
00000000000039c8	sub	x8, x29, #0x30
00000000000039cc	sub	x9, x29, #0x18
00000000000039d0	sub	x10, x29, #0x10
00000000000039d4	stp	x9, x8, [sp, #0x10]
00000000000039d8	adrp	x0, 1 ; 0x4000
00000000000039dc	add	x0, x0, #0x88
00000000000039e0	adrp	x2, 0 ; 0x3000
00000000000039e4	add	x2, x2, #0xa04
00000000000039e8	sub	x8, x29, #0x1c
00000000000039ec	stp	x8, x10, [sp]
00000000000039f0	mov	w1, #0x9
00000000000039f4	bl	0x3ea0 ; symbol stub for: ___kmpc_fork_call
00000000000039f8	ldp	x29, x30, [sp, #0x80]
00000000000039fc	add	sp, sp, #0x90
0000000000003a00	ret
_.omp_outlined..1:
0000000000003a04	sub	sp, sp, #0xb0
0000000000003a08	stp	d13, d12, [sp, #0x20]
0000000000003a0c	stp	d11, d10, [sp, #0x30]
0000000000003a10	stp	d9, d8, [sp, #0x40]
0000000000003a14	stp	x28, x27, [sp, #0x50]
0000000000003a18	stp	x26, x25, [sp, #0x60]
0000000000003a1c	stp	x24, x23, [sp, #0x70]
0000000000003a20	stp	x22, x21, [sp, #0x80]
0000000000003a24	stp	x20, x19, [sp, #0x90]
0000000000003a28	stp	x29, x30, [sp, #0xa0]
0000000000003a2c	add	x29, sp, #0xa0
0000000000003a30	ldr	w8, [x2]
0000000000003a34	subs	w25, w8, #0x1
0000000000003a38	b.lt	0x3ab8
0000000000003a3c	mov	x19, x7
0000000000003a40	mov	x20, x6
0000000000003a44	mov	x21, x5
0000000000003a48	mov	x23, x4
0000000000003a4c	mov	x24, x3
0000000000003a50	stp	w25, wzr, [sp, #0x18]
0000000000003a54	mov	w8, #0x1
0000000000003a58	stp	wzr, w8, [sp, #0x10]
0000000000003a5c	ldr	w22, [x0]
0000000000003a60	str	w8, [sp]
0000000000003a64	adrp	x0, 1 ; 0x4000
0000000000003a68	add	x0, x0, #0x70
0000000000003a6c	add	x3, sp, #0x10
0000000000003a70	add	x4, sp, #0x1c
0000000000003a74	add	x5, sp, #0x18
0000000000003a78	add	x6, sp, #0x14
0000000000003a7c	mov	x1, x22
0000000000003a80	mov	w2, #0x22
0000000000003a84	mov	w7, #0x1
0000000000003a88	bl	0x3e94 ; symbol stub for: ___kmpc_for_static_init_4
0000000000003a8c	ldp	w8, w9, [sp, #0x18]
0000000000003a90	sxtw	x9, w9
0000000000003a94	cmp	w8, w25
0000000000003a98	csel	w8, w8, w25, lt
0000000000003a9c	str	w8, [sp, #0x18]
0000000000003aa0	cmp	w9, w8
0000000000003aa4	b.le	0x3ae4
0000000000003aa8	adrp	x0, 1 ; 0x4000
0000000000003aac	add	x0, x0, #0x70
0000000000003ab0	mov	x1, x22
0000000000003ab4	bl	0x3e88 ; symbol stub for: ___kmpc_for_static_fini
0000000000003ab8	ldp	x29, x30, [sp, #0xa0]
0000000000003abc	ldp	x20, x19, [sp, #0x90]
0000000000003ac0	ldp	x22, x21, [sp, #0x80]
0000000000003ac4	ldp	x24, x23, [sp, #0x70]
0000000000003ac8	ldp	x26, x25, [sp, #0x60]
0000000000003acc	ldp	x28, x27, [sp, #0x50]
0000000000003ad0	ldp	d9, d8, [sp, #0x40]
0000000000003ad4	ldp	d11, d10, [sp, #0x30]
0000000000003ad8	ldp	d13, d12, [sp, #0x20]
0000000000003adc	add	sp, sp, #0xb0
0000000000003ae0	ret
0000000000003ae4	ldp	x25, x10, [x29, #0x18]
0000000000003ae8	ldr	x26, [x29, #0x10]
0000000000003aec	ldr	x11, [x24]
0000000000003af0	ldr	x12, [x23]
0000000000003af4	ldr	x10, [x10]
0000000000003af8	add	x23, x10, x9, lsl #2
0000000000003afc	mov	w10, #0xc
0000000000003b00	smull	x10, w9, w10
0000000000003b04	add	x10, x10, #0x8
0000000000003b08	add	x24, x11, x10
0000000000003b0c	add	x27, x12, x10
0000000000003b10	sub	w8, w8, w9
0000000000003b14	add	w28, w8, #0x1
0000000000003b18	fmov	s10, #4.00000000
0000000000003b1c	b	0x3b34
0000000000003b20	str	s0, [x23], #0x4
0000000000003b24	add	x24, x24, #0xc
0000000000003b28	add	x27, x27, #0xc
0000000000003b2c	subs	w28, w28, #0x1
0000000000003b30	b.eq	0x3aa8
0000000000003b34	ldur	d0, [x24, #-0x8]
0000000000003b38	ldur	d1, [x27, #-0x8]
0000000000003b3c	fsub.2s	v0, v0, v1
0000000000003b40	fmul.2s	v0, v0, v0
0000000000003b44	faddp.2s	s0, v0
0000000000003b48	ldr	s1, [x24]
0000000000003b4c	ldr	s2, [x27]
0000000000003b50	fsub	s1, s1, s2
0000000000003b54	fmul	s1, s1, s1
0000000000003b58	fadd	s0, s0, s1
0000000000003b5c	fsqrt	s11, s0
0000000000003b60	ldr	s1, [x21]
0000000000003b64	movi	d0, #0000000000000000
0000000000003b68	fcmp	s11, s1
0000000000003b6c	b.pl	0x3b20
0000000000003b70	ldr	s0, [x20]
0000000000003b74	fmul	s12, s0, s10
0000000000003b78	ldr	s13, [x19]
0000000000003b7c	fdiv	s8, s13, s11
0000000000003b80	fmov	s1, #12.00000000
0000000000003b84	fmov	s0, s8
0000000000003b88	bl	0x3ee8 ; symbol stub for: _powf
0000000000003b8c	fmov	s9, s0
0000000000003b90	fmov	s1, #6.00000000
0000000000003b94	fmov	s0, s8
0000000000003b98	bl	0x3ee8 ; symbol stub for: _powf
0000000000003b9c	fsub	s0, s9, s0
0000000000003ba0	fmul	s8, s12, s0
0000000000003ba4	ldr	s9, [x26]
0000000000003ba8	ldr	s0, [x25]
0000000000003bac	fsub	s0, s11, s0
0000000000003bb0	fneg	s1, s0
0000000000003bb4	fmul	s0, s0, s1
0000000000003bb8	fmul	s1, s13, s13
0000000000003bbc	fadd	s1, s1, s1
0000000000003bc0	fdiv	s0, s0, s1
0000000000003bc4	bl	0x3ec4 ; symbol stub for: _expf
0000000000003bc8	fmul	s0, s9, s0
0000000000003bcc	fadd	s0, s8, s0
0000000000003bd0	b	0x3b20
_main:
0000000000003bd4	sub	sp, sp, #0xa0
0000000000003bd8	stp	d9, d8, [sp, #0x30]
0000000000003bdc	stp	x28, x27, [sp, #0x40]
0000000000003be0	stp	x26, x25, [sp, #0x50]
0000000000003be4	stp	x24, x23, [sp, #0x60]
0000000000003be8	stp	x22, x21, [sp, #0x70]
0000000000003bec	stp	x20, x19, [sp, #0x80]
0000000000003bf0	stp	x29, x30, [sp, #0x90]
0000000000003bf4	add	x29, sp, #0x90
0000000000003bf8	cmp	w0, #0x2
0000000000003bfc	b.ne	0x3e54
0000000000003c00	ldr	x0, [x1, #0x8]
0000000000003c04	bl	0x3eac ; symbol stub for: _atoi
0000000000003c08	mov	x21, x0
0000000000003c0c	str	x21, [sp]
0000000000003c10	adrp	x0, 0 ; 0x3000
0000000000003c14	add	x0, x0, #0xf47 ; literal pool for: "n = %d\n"
0000000000003c18	bl	0x3ef4 ; symbol stub for: _printf
0000000000003c1c	sbfiz	x0, x21, #2, #32
0000000000003c20	bl	0x3edc ; symbol stub for: _malloc
0000000000003c24	mov	x19, x0
0000000000003c28	add	w22, w21, w21, lsl #1
0000000000003c2c	sbfiz	x0, x22, #2, #32
0000000000003c30	bl	0x3edc ; symbol stub for: _malloc
0000000000003c34	mov	x20, x0
0000000000003c38	mov	w0, #0x0
0000000000003c3c	bl	0x3f24 ; symbol stub for: _srand
0000000000003c40	cmp	w21, #0x1
0000000000003c44	b.lt	0x3c70
0000000000003c48	cmp	w22, #0x1
0000000000003c4c	csinc	w22, w22, wzr, gt
0000000000003c50	movi.2s	v8, #0x30, lsl #24
0000000000003c54	mov	x23, x20
0000000000003c58	bl	0x3f18 ; symbol stub for: _rand
0000000000003c5c	scvtf	s0, w0
0000000000003c60	fmul	s0, s0, s8
0000000000003c64	str	s0, [x23], #0x4
0000000000003c68	subs	x22, x22, #0x1
0000000000003c6c	b.ne	0x3c58
0000000000003c70	bl	0x3eb8 ; symbol stub for: _clock
0000000000003c74	mov	x22, x0
0000000000003c78	stp	x20, x19, [sp, #0x20]
0000000000003c7c	str	w21, [sp, #0x1c]
0000000000003c80	add	x25, sp, #0x20
0000000000003c84	add	x26, sp, #0x28
0000000000003c88	add	x27, sp, #0x1c
0000000000003c8c	adrp	x24, 1 ; 0x4000
0000000000003c90	add	x24, x24, #0x88
0000000000003c94	stp	x26, x25, [sp, #0x8]
0000000000003c98	str	x27, [sp]
0000000000003c9c	adrp	x23, 0 ; 0x3000
0000000000003ca0	add	x23, x23, #0x778
0000000000003ca4	mov	x0, x24
0000000000003ca8	mov	w1, #0x3
0000000000003cac	mov	x2, x23
0000000000003cb0	bl	0x3ea0 ; symbol stub for: ___kmpc_fork_call
0000000000003cb4	stp	x20, x19, [sp, #0x20]
0000000000003cb8	str	w21, [sp, #0x1c]
0000000000003cbc	stp	x26, x25, [sp, #0x8]
0000000000003cc0	str	x27, [sp]
0000000000003cc4	mov	x0, x24
0000000000003cc8	mov	w1, #0x3
0000000000003ccc	mov	x2, x23
0000000000003cd0	bl	0x3ea0 ; symbol stub for: ___kmpc_fork_call
0000000000003cd4	stp	x20, x19, [sp, #0x20]
0000000000003cd8	str	w21, [sp, #0x1c]
0000000000003cdc	stp	x26, x25, [sp, #0x8]
0000000000003ce0	str	x27, [sp]
0000000000003ce4	mov	x0, x24
0000000000003ce8	mov	w1, #0x3
0000000000003cec	mov	x2, x23
0000000000003cf0	bl	0x3ea0 ; symbol stub for: ___kmpc_fork_call
0000000000003cf4	stp	x20, x19, [sp, #0x20]
0000000000003cf8	str	w21, [sp, #0x1c]
0000000000003cfc	stp	x26, x25, [sp, #0x8]
0000000000003d00	str	x27, [sp]
0000000000003d04	mov	x0, x24
0000000000003d08	mov	w1, #0x3
0000000000003d0c	mov	x2, x23
0000000000003d10	bl	0x3ea0 ; symbol stub for: ___kmpc_fork_call
0000000000003d14	stp	x20, x19, [sp, #0x20]
0000000000003d18	str	w21, [sp, #0x1c]
0000000000003d1c	stp	x26, x25, [sp, #0x8]
0000000000003d20	str	x27, [sp]
0000000000003d24	mov	x0, x24
0000000000003d28	mov	w1, #0x3
0000000000003d2c	mov	x2, x23
0000000000003d30	bl	0x3ea0 ; symbol stub for: ___kmpc_fork_call
0000000000003d34	stp	x20, x19, [sp, #0x20]
0000000000003d38	str	w21, [sp, #0x1c]
0000000000003d3c	stp	x26, x25, [sp, #0x8]
0000000000003d40	str	x27, [sp]
0000000000003d44	mov	x0, x24
0000000000003d48	mov	w1, #0x3
0000000000003d4c	mov	x2, x23
0000000000003d50	bl	0x3ea0 ; symbol stub for: ___kmpc_fork_call
0000000000003d54	stp	x20, x19, [sp, #0x20]
0000000000003d58	str	w21, [sp, #0x1c]
0000000000003d5c	stp	x26, x25, [sp, #0x8]
0000000000003d60	str	x27, [sp]
0000000000003d64	mov	x0, x24
0000000000003d68	mov	w1, #0x3
0000000000003d6c	mov	x2, x23
0000000000003d70	bl	0x3ea0 ; symbol stub for: ___kmpc_fork_call
0000000000003d74	stp	x20, x19, [sp, #0x20]
0000000000003d78	str	w21, [sp, #0x1c]
0000000000003d7c	stp	x26, x25, [sp, #0x8]
0000000000003d80	str	x27, [sp]
0000000000003d84	mov	x0, x24
0000000000003d88	mov	w1, #0x3
0000000000003d8c	mov	x2, x23
0000000000003d90	bl	0x3ea0 ; symbol stub for: ___kmpc_fork_call
0000000000003d94	stp	x20, x19, [sp, #0x20]
0000000000003d98	str	w21, [sp, #0x1c]
0000000000003d9c	stp	x26, x25, [sp, #0x8]
0000000000003da0	str	x27, [sp]
0000000000003da4	mov	x0, x24
0000000000003da8	mov	w1, #0x3
0000000000003dac	mov	x2, x23
0000000000003db0	bl	0x3ea0 ; symbol stub for: ___kmpc_fork_call
0000000000003db4	stp	x20, x19, [sp, #0x20]
0000000000003db8	str	w21, [sp, #0x1c]
0000000000003dbc	stp	x26, x25, [sp, #0x8]
0000000000003dc0	str	x27, [sp]
0000000000003dc4	mov	x0, x24
0000000000003dc8	mov	w1, #0x3
0000000000003dcc	mov	x2, x23
0000000000003dd0	bl	0x3ea0 ; symbol stub for: ___kmpc_fork_call
0000000000003dd4	bl	0x3eb8 ; symbol stub for: _clock
0000000000003dd8	sub	x8, x0, x22
0000000000003ddc	ucvtf	d0, x8
0000000000003de0	mov	x8, #0x848000000000
0000000000003de4	movk	x8, #0x412e, lsl #48
0000000000003de8	fmov	d1, x8
0000000000003dec	fdiv	d0, d0, d1
0000000000003df0	fmov	d1, #10.00000000
0000000000003df4	fdiv	d0, d0, d1
0000000000003df8	str	d0, [sp]
0000000000003dfc	adrp	x0, 0 ; 0x3000
0000000000003e00	add	x0, x0, #0xf4f ; literal pool for: "Spent %f s\n"
0000000000003e04	bl	0x3ef4 ; symbol stub for: _printf
0000000000003e08	mov	x22, #0x0
0000000000003e0c	adrp	x21, 0 ; 0x3000
0000000000003e10	add	x21, x21, #0xf5b ; literal pool for: "%f "
0000000000003e14	ldr	s0, [x19, x22]
0000000000003e18	fcvt	d0, s0
0000000000003e1c	str	d0, [sp]
0000000000003e20	mov	x0, x21
0000000000003e24	bl	0x3ef4 ; symbol stub for: _printf
0000000000003e28	add	x22, x22, #0x4
0000000000003e2c	cmp	x22, #0x190
0000000000003e30	b.ne	0x3e14
0000000000003e34	mov	w0, #0xa
0000000000003e38	bl	0x3f00 ; symbol stub for: _putchar
0000000000003e3c	mov	x0, x19
0000000000003e40	bl	0x3ed0 ; symbol stub for: _free
0000000000003e44	mov	x0, x20
0000000000003e48	bl	0x3ed0 ; symbol stub for: _free
0000000000003e4c	mov	w0, #0x0
0000000000003e50	b	0x3e64
0000000000003e54	adrp	x0, 0 ; 0x3000
0000000000003e58	add	x0, x0, #0xf5f ; literal pool for: "Wrong number of arguments - supply one number"
0000000000003e5c	bl	0x3f0c ; symbol stub for: _puts
0000000000003e60	mov	w0, #0x1
0000000000003e64	ldp	x29, x30, [sp, #0x90]
0000000000003e68	ldp	x20, x19, [sp, #0x80]
0000000000003e6c	ldp	x22, x21, [sp, #0x70]
0000000000003e70	ldp	x24, x23, [sp, #0x60]
0000000000003e74	ldp	x26, x25, [sp, #0x50]
0000000000003e78	ldp	x28, x27, [sp, #0x40]
0000000000003e7c	ldp	d9, d8, [sp, #0x30]
0000000000003e80	add	sp, sp, #0xa0
0000000000003e84	ret
